作用：转变一个类的接口为另一个类的接口，使接口不同的类可以共同工作。

适用性：	
	1.你想要使用一个存在的类，但该类的接口与你想要的接口不匹配。
	2.

合作：
	1.通常在运行中只有一个具体工厂且生成固定的产品，想要不同的产品需要切换工厂
	2.抽象工厂将产品生成推迟到子类

利弊：
     利：
	1.隔绝具体的类，客户端不会出现产品中具体的子类。
	2.改变产品家族更加容易，通过修改具体工厂即可。
	3.促进产品之间的一致性，通过工厂强制家族产品一起应用
     弊：
	1.添加新的产品类型变得困难，需要在每个工厂中添加新的接口。

相关设计模式：
	1.抽象工厂经常用工厂模式生成，有时也可以用原型模式实现。
	2.一个工厂实例通常为单例

职责：
	AbstractFactor：声明创建抽象Product的接口。
	ConcretFactor：实现接口。
	AbstractProduct：声明接口给该类型的object。
	Product：实现AbstractProduct接口。